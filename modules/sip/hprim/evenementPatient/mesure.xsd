<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- edited with XML Spy v4.0 beta 2 build Jul 26 2001 (http://www.xmlspy.com) by Macary François (private) -->
<xsd:schema targetNamespace="http://www.hprim.org/hprimXML" xmlns="http://www.hprim.org/hprimXML" xmlns:xsd="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" attributeFormDefault="unqualified">
   <!-- 
      inclusions des schémas des niveaux inferieurs 
   -->
   <xsd:include schemaLocation="nomenclaturesHprim.xsd"/>
   <xsd:include schemaLocation="typesDeBase.xsd"/>
   <xsd:include schemaLocation="typesTemps.xsd"/>
   <!--
      "typeResultatMesure" :
      Définit les éléments de base accompagnant le résultat d'une mesure
      Ce type est dérivé de "typeMesure" par adjonction des éléments caractéristiques du résultat :
      - éléments optionnels :
         - choix entre :
               - anomalies : la liste des anomalies détectées
               - normal : le résultat ne comporte pas d'anomalie. Cet élément l'indique par sa seule présence
   -->
   <xsd:complexType name="typeResultatMesure">
      <xsd:complexContent>
         <xsd:extension base="typeMesure">
            <xsd:sequence>
               <xsd:choice>
                  <xsd:element name="normal" type="typeVide"/>
                  <xsd:element name="anomalies" type="typeResultatAnomalies"/>
               </xsd:choice>
               <xsd:element name="alarmes" type="typeAlarmes" minOccurs="0"/>
            </xsd:sequence>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <!--
      "typeResultatAnomalies" :
   -->
   <xsd:complexType name="typeResultatAnomalies">
      <xsd:sequence>
         <xsd:element name="anomalie" type="anomalieResultat" maxOccurs="5"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:simpleType name="anomalieResultat">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="référence_haute"/>
         <xsd:enumeration value="référence_basse"/>
         <xsd:enumeration value="hors_références"/>
         <xsd:enumeration value="acceptable_haute"/>
         <xsd:enumeration value="acceptable_basse"/>
         <xsd:enumeration value="hors_acceptables"/>
         <xsd:enumeration value="extrème_haute"/>
         <xsd:enumeration value="extrème_basse"/>
         <xsd:enumeration value="hors_extrèmes"/>
         <xsd:enumeration value="delta_check_croissant"/>
         <xsd:enumeration value="delta_check_décroissant"/>
         <xsd:enumeration value="delta_check"/>
         <xsd:enumeration value="alarme"/>
         <xsd:enumeration value="pathologique"/>
      </xsd:restriction>
   </xsd:simpleType>
   <!-- 
      "typeAlarmes" : les alarmes susceptibles d'accompagner un résultat. 
      Chacune est un texte de 80 caractères maximum. 
   -->
   <xsd:complexType name="typeAlarmes">
      <xsd:sequence>
         <xsd:element name="alarme" type="texte80" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>
   <!--
      "typeNumeriqueCalcul" :
      type numérique pour un résultat calculé. Intéressant lorsqu'on veut donner au destinataire la formule de calcul à utiliser.
      Ce type est dérivé de "typeMesure" par adjonction de l'élément obligatoire "formule"
   -->
   <xsd:complexType name="typeNumeriqueCalcul">
      <xsd:complexContent>
         <xsd:extension base="typeMesure">
            <xsd:sequence>
               <xsd:element name="formule" type="texte400"/>
            </xsd:sequence>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <!--
      "typeMesure" :
      type  pour un résultat mesuré
      - éléments obligatoires :
      - éléments optionnels :
         - unite  exprimée dans une nomenclature (ANSI, ISO, Names-Lab, HL7, ...)
         - intervalles : jusqu'à trois intervalles peuvet être précisés : valeurs de référence, valeurs acceptables, valeurs extrèmes
         - règle de déclenchement du delta-check
         - dateDernierChangement (repris depuis Hprim Santé OBX 10.13)
   -->
   <xsd:complexType name="typeMesure">
      <xsd:sequence>
         <xsd:element name="unite" minOccurs="0">
            <xsd:complexType>
               <xsd:complexContent>
                  <xsd:extension base="typeCode12Libelle80">
                     <xsd:attribute name="valeur" type="uniteHprim" use="optional"/>
                  </xsd:extension>
               </xsd:complexContent>
            </xsd:complexType>
         </xsd:element>
         <xsd:element name="intervalles" type="typeIntervallesLimites" minOccurs="0"/>
         <xsd:element name="regleDeltaCheck" type="typeRegleDeltaCheck" minOccurs="0"/>
         <xsd:element name="reglesComplementaires" type="typeReglesComplementaires" minOccurs="0"/>
         <xsd:element name="dateDernierChangement" type="typeDateHeureOptionnelle" minOccurs="0"/>
      </xsd:sequence>
   </xsd:complexType>
   <!--
      "typeIntervallesLimites" :
      intervalles de limites pour un test de type numérique
   -->
   <xsd:complexType name="typeIntervallesLimites">
      <xsd:sequence>
         <xsd:element name="intervalle" type="typeIntervalleLimite" maxOccurs="3"/>
      </xsd:sequence>
   </xsd:complexType>
   <!--
      "typeIntervalleLimite" :
      un intervalle de limites pour un test de type numérique. 
      De la forme :  [x, y]  ou  ]x, y[  ou  ]x, y]  ou  [x, y[  ou  <x  ou  <=x  ou  >y  ou  >=y 
   -->
   <xsd:complexType name="typeIntervalleLimite">
      <xsd:sequence>
         <xsd:choice>
            <xsd:element name="minimumInclus" type="xsd:decimal" minOccurs="0"/>
            <xsd:element name="minimumExclu" type="xsd:decimal" minOccurs="0"/>
         </xsd:choice>
         <xsd:choice>
            <xsd:element name="maximumInclus" type="xsd:decimal" minOccurs="0"/>
            <xsd:element name="maximumExclu" type="xsd:decimal" minOccurs="0"/>
         </xsd:choice>
      </xsd:sequence>
      <xsd:attribute name="qualification" type="qualificationLimites" use="required"/>
      <xsd:attribute name="dependant" type="dependancePatient" use="optional"/>
   </xsd:complexType>
   <!--
       "qualificationLimites" :
      qualification d'un intervalle de limites
   -->
   <xsd:simpleType name="qualificationLimites">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="référence"/>
         <xsd:enumeration value="acceptables"/>
         <xsd:enumeration value="extrèmes"/>
      </xsd:restriction>
   </xsd:simpleType>
   <!--
      "typeRegleDeltaCheck" :
      règle pour l'application du delta-check à un résultat numérique
      - Attribut obligatoire :
         - sens : 
            - aucun = pas de delta-check
            - croissant : le deltacheck ne se déclenche que dans le sens croissant : résultat courant > résultat antérieur
            - décroissant : le deltacheck ne se déclenche que dans le sens dé croissant : résultat courant < résultat antérieur
            - deux : le deltacheck se déclenche dans les deux sens 
      - Attribut optionnel :
         - dependant : dépendance de la règle de delta-check vis à vis du patient
         - minOuMax : 
            - max : (valeur par défaut) le delta-check se déclenche lorsque l'écart est trop important entre le résultat courant et le résultat antérieur
            - min : le delta-check se déclenche lorsque l'écart est trop faible : résultat courant trop proche du résultat antérieur
      - éléments optionnels
         - ecartPourcentage   : limite en % de l'écart entre résultat courant et résultat antérieur
         - ecartAbsolu        : limite en valeur absolue de l'écart entre résultat courant et résultat antérieur
         - seuil                 : valeur absolue d'écart au dessus de laquelle le deltacheck doit être mesuré en pourcentage
   -->
   <xsd:complexType name="typeRegleDeltaCheck">
      <xsd:sequence>
         <xsd:element name="ecartPourcentage" type="decimalPositif" minOccurs="0"/>
         <xsd:element name="ecartAbsolu" type="decimalPositif" minOccurs="0"/>
         <xsd:element name="seuil" type="decimalPositif" minOccurs="0"/>
      </xsd:sequence>
      <xsd:attribute name="sens" type="sensDeltaCheck" use="required"/>
      <xsd:attribute name="dependant" type="dependancePatient" use="optional"/>
      <xsd:attribute name="minOuMax" type="minOuMax" default="max"/>
   </xsd:complexType>
   <xsd:simpleType name="sensDeltaCheck">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="aucun"/>
         <xsd:enumeration value="croissant"/>
         <xsd:enumeration value="décroissant"/>
         <xsd:enumeration value="deux"/>
      </xsd:restriction>
   </xsd:simpleType>
   <!--
       "dependancePatient" :
      dépendance d'un intervalle de limites ou d'une règle de delta-check vis à vis du patient
   -->
   <xsd:simpleType name="dependancePatient">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="âge_sexe"/>
         <xsd:enumeration value="pathologie"/>
         <xsd:enumeration value="traitement"/>
         <xsd:enumeration value="fixe"/>
      </xsd:restriction>
   </xsd:simpleType>
   <!--
      "typeReglesComplementaires" :
      Règles complémentaires d'interprétation du résultat d'un test, codées de façon libre
   -->
   <xsd:complexType name="typeReglesComplementaires">
      <xsd:sequence>
         <xsd:element name="regleComplementaire" type="typeCode10Libelle35" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>
</xsd:schema>
